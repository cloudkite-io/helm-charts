{{- range .Values.databases }}
{{- if .backup.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}-backup-script
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .name }}-backup
data:
  backup-script.sh: |
    #!/bin/bash
    set -eo pipefail

    # --- Configuration ---
    DB_SERVER="{{ .name }}-svc"
    DB_DATABASE="{{ .database }}"
    DB_USER="sa"
    DB_PASSWORD="${MSSQL_SA_PASSWORD}"

    # S3 Backup details from values
    S3_BUCKET="{{ .backup.s3Bucket }}"
    S3_REGION="{{ .backup.s3Region }}"
    S3_ENDPOINT="${S3_BUCKET}.s3.${S3_REGION}.amazonaws.com"
    BACKUP_FILENAME="${DB_DATABASE}-$(date +%Y-%m-%d-%H-%M-%S).bak"
    S3_URL="s3://${S3_ENDPOINT}/backups/${BACKUP_FILENAME}"
    CREDENTIAL_NAME="s3://${S3_ENDPOINT}"

    echo "Starting backup for database [${DB_DATABASE}] to ${S3_URL}"

    # --- T-SQL Commands ---
    CREATE_CREDENTIAL_SQL="
    IF NOT EXISTS (SELECT 1 FROM sys.credentials WHERE name = '${CREDENTIAL_NAME}')
    BEGIN
      CREATE CREDENTIAL [${CREDENTIAL_NAME}]
      WITH IDENTITY = 'S3 Access Key',
      SECRET = '${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}'
    END"

    BACKUP_DATABASE_SQL="
    BACKUP DATABASE [${DB_DATABASE}]
    TO URL = '${S3_URL}'
    WITH FORMAT, COMPRESSION, STATS = 10, MAXTRANSFERSIZE = 20971520;"

    # --- Execution ---
    echo "Ensuring S3 credential exists..."
    sqlcmd -S "${DB_SERVER}" -U "${DB_USER}" -P "${DB_PASSWORD}" -Q "${CREATE_CREDENTIAL_SQL}" -b -C

    echo "Executing backup..."
    sqlcmd -S "${DB_SERVER}" -U "${DB_USER}" -P "${DB_PASSWORD}" -Q "${BACKUP_DATABASE_SQL}" -b -C -t 600

    echo "Backup of [${DB_DATABASE}] completed successfully."
{{- end }}
{{- end }}