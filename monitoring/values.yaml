kube-prometheus-stack:
  grafana:
    enabled: false
  defaultRules:
    create: false
  alertmanager:
    enabled: false
    config:
      route:
        group_by: ['alertname', 'cluster', 'service', 'job']
    templateFiles:
      default_template.tmpl: |-
          {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}

          {{ define "msteams.ck.text" }}
          {{- $root := . -}}
          {{ range .Alerts -}}
          *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

          *Description:* {{ .Annotations.description }}

          *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
          {{ end }}

          {{ define "msteams.ck.title" }}
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
          {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
            {{" "}}(
            {{- with .CommonLabels.Remove .GroupLabels.Names }}
              {{- range $index, $label := .SortedPairs -}}
                {{ if $index }}, {{ end }}
                {{- $label.Name }}="{{ $label.Value -}}"
              {{- end }}
            {{- end -}}
            )
          {{- end }}
          {{ end }}


  prometheus:
    prometheusSpec:
      resources:
        requests:
          memory: 1Gi
        limits:
          memory: 1Gi
      remoteWrite:
        - url: https://mimir-CLIENT_NAME.prod.cloudkite.io/api/v1/push
          basicAuth:
            username:
              name: basic-auth-creds
              key: username
            password:
              name: basic-auth-creds
              key: password
          headers:
            X-Scope-OrgID: CLIENT_NAME
          writeRelabelConfigs:
            - sourceLabels:
              - "__name__"
              regex: "kubernetes_build_info|version_checker_is_latest_version"
              action: "keep"
          queueConfig:
            capacity: 5000
            maxSamplesPerSend: 1000
            maxShards: 100
      externalLabels:
        cluster: CLUSTER_NAME
      image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v2.45.0
  prometheusOperator:
    verticalPodAutoscaler:
      enabled: true

# basic_auth:
#   username: USERNAME
#   password: PASSWORD

version-checker:
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: "monitoring"

x509-certificate-exporter:
  prometheusServiceMonitor:
    create: true
    extraLabels:
      release: "monitoring"
  prometheusRules:
    create: false
      
vpaApps:
  prometheus:
    kind: StatefulSet
  kube-state-metrics:
    kind: Deployment
  prometheus-node-exporter:
    kind: DaemonSet
    minReplicas: 2